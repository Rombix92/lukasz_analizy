[["index.html", "Ksiega Lukasza Preface", " Ksiega Lukasza Lukasz Rabalski 2021-01-17 Preface This is the very first part of the book. "],["data-grapling.html", "Chapter 1 Data Grapling 1.1 EDA 1.2 Missing Data", " Chapter 1 Data Grapling 1.1 EDA 1.Take a look at data 2.Visualize Data 3.Count basic statistics One quick technique for jump-starting EDA is to examine all of the pairwise scatterplots in your data. This can be achieved using the pairs() function. Look for variables in the nyc data set that are strongly correlated, as those relationships will help us check for multicollinearity later on. df_it_restaurants &lt;- read.csv(&#39;https://assets.datacamp.com/production/repositories/845/datasets/639a7a3f9020edb51bcbc4bfdb7b71cbd8b9a70e/nyc.csv&#39;) pairs(df_it_restaurants %&gt;% select(-Restaurant)) 1.2 Missing Data NA = Not Available NaN = Not a Number library(&#39;datasets&#39;) df_airquality &lt;- airquality NA|TRUE ## [1] TRUE NA|FALSE ## [1] NA NA+NaN ## [1] NA NaN+NA ## [1] NaN library(naniar) "],["statistics.html", "Chapter 2 Statistics 2.1 Logistic Regression", " Chapter 2 Statistics 2.1 Logistic Regression Markdown Tutorial 2.1.1 Matematyczna interpretacja modelu Quiz correct answers: d. Hint: Remember, the coefficient in a logistic regression model is the expected increase in the log odds given a one unit increase in the explanatory variable. Survived Fare Fare_log 0 7.2500 2 1 71.2833 4 1 7.9250 2 1 53.1000 4 0 8.0500 2 0 8.4583 2 Wyliczanie modelu logistycznego. model &lt;- glm(data=df_titanic, Survived ~ Fare_log, family = &#39;binomial&#39;) tidy(model) %&gt;% kable(caption=&#39;Table 1. Summary statistics for logistic regression model&#39;) Table 2.1: Table 1. Summary statistics for logistic regression model term estimate std.error statistic p.value (Intercept) -2.3337286 0.2452271 -9.516601 0 Fare_log 0.6442428 0.0792358 8.130706 0 Model wyliczany jest zgodnie z ponizsza formula dlategp by otrzymac oszacowania paraemtrow w formie ich wpywu na odds musimy je podda dziaaniu exp() coef(model) ## (Intercept) Fare_log ## -2.3337286 0.6442428 #Tak przemnozone wspolczynniki interpretujemy nastepujaco: # o ile % wzrosnie odds wystapienia zdarzenia jezeli wzrosnie nam wartosc predyktora o 1 exp(coef(model)) ## (Intercept) Fare_log ## 0.09693365 1.90454431 Ponizej w sposob matematyczny pokazuje ze to wlasnie oznacza interpretacja wzrostu parametra stajacego przy predyktorze. df_aug &lt;- augment(model, type.predict = &quot;response&quot;) # without response argument, the fitted value will be on log-odds scale p3 = df_aug$.fitted[df_aug$Fare_log==3][1] p2 = df_aug$.fitted[df_aug$Fare_log==2][1] x &lt;- round(p3/(1-p3)/(p2/(1-p2)),5) # i sprawdzenie czy dobrze rozumiem zalenosc x1&lt;-round(exp(coef(model))[&#39;Fare_log&#39;],5) x1==x ## Fare_log ## TRUE Prob for Fare_log = 2 was equal to 0.2601396 while for Fare_log = 3 was equal to 0.401072. The odds increase by 1.90454. The same what model results suggests -&gt; 1.90454. Quiz The fitted coefficient from the medical school logistic regression model is 5.45. The exponential of this is 233.73. Donalds GPA is 2.9, and thus the model predicts that the probability of him getting into medical school is 3.26%. The odds of Donald getting into medical school are 0.0337, orphrased in gambling terms29.6:1. If Donald hacks the schools registrar and changes his GPA to 3.9, then which of the following statements is FALSE: Possible Answers His expected odds of getting into medical school improve to 7.8833 (or about 9:8). His expected probability of getting into medical school improves to 88.7%. His expected log-odds of getting into medical school improve by 5.45. His expected probability of getting into medical school improves to 7.9%. Correct answers on the top of the page 2.1.2 Graficzna interpretacja modelu df_aug %&gt;% mutate(Survived_hat=round(.fitted)) %&gt;% select(Survived, Survived_hat) %&gt;% table ## Survived_hat ## Survived 0 1 ## 0 462 83 ## 1 219 123 #Out of sample predictions DiCaprio&lt;-data.frame(Fare_log=1) augment(model, newdata = DiCaprio, type.predict = &#39;response&#39;) ## # A tibble: 1 x 2 ## Fare_log .fitted ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0.156 "]]
